<?php

namespace common\models\article;

use arogachev\ManyToMany\behaviors\ManyToManyBehavior;
use common\ext\models\SimplexActiveRecord;
use Yii;
use yii\behaviors\SluggableBehavior;

/**
 * This is the model class for table "simp_article".
 *
 * @property integer $id
 * @property string $name
 * @property string $content
 * @property array categories
 * @property mixed slug
 */
class ArticleRecord extends SimplexActiveRecord
{
    public $categories;
    public $tags;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'simp_article';
    }

    public function behaviors()
    {
        return [
            [
                'class' => ManyToManyBehavior::className(),
                'relations' => [
                    [
                        'editableAttribute' => 'categories', // Editable attribute name
                        'table' => '{{%article_to_category}}', // Name of the junction table
                        'ownAttribute' => 'article_id', // Name of the column in junction table that represents current model
                        'relatedModel' => ArticleCategoryRecord::className(), // Related model class
                        'relatedAttribute' => 'article_category_id', // Name of the column in junction table that represents related model
                    ],
                    [
                        'editableAttribute' => 'tags', // Editable attribute name
                        'table' => '{{%article_to_tag}}', // Name of the junction table
                        'ownAttribute' => 'article_id', // Name of the column in junction table that represents current model
                        'relatedModel' => ArticleTagRecord::className(), // Related model class
                        'relatedAttribute' => 'article_tag_id', // Name of the column in junction table that represents related model
                    ],
                ],
            ],
            [
                'class' => SluggableBehavior::className(),
                'attribute' => 'name',
                'slugAttribute' => 'slug',
            ],
        ];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['slug', 'name', 'content'], 'required'],
            [['content'], 'string'],
            [['slug'], 'string', 'max' => 40],
            [['name'], 'string', 'max' => 255],
            [['slug'], 'unique'],
            [['categories', 'tags'], 'safe'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'name' => 'Name',
            'content' => 'Content',
        ];
    }

    public function beforeSave($insert)
    {
        foreach ($this->tags as $tag) {
            if (!is_numeric($tag)) {
                $newTag = new ArticleTagRecord();
                $newTag->name = $tag;
                if ($newTag->save()) {
                    unset($this->tags[$tag]);
                    $this->tags[] = $newTag->id;
                }
            }
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function findWithoutCategory()
    {
        
    }
}
